name: model-quantize

permissions:
  contents: write
  actions: read
  id-token: write

defaults:
  run:
    shell: bash

on:
  workflow_dispatch:
    inputs:
      huggingface_repository:
        description: "HuggingFace Repository"
        required: true
        type: string
        default: ""
      model_convert_type:
        description: "Model Convert Type"
        required: true
        type: string
        default: "F16"
      model_quantize_types:
        description: "Model Quantize Types"
        required: true
        type: string
        default: "Q4_K_M,Q5_K_M"
      model_repository:
        description: "Model Repository"
        required: true
        type: string
        default: ""
      model_name:
        description: "Model Name"
        required: true
        type: string
        default: ""
      model_tag:
        description: "Model Tag"
        required: true
        type: string
        default: ""
      model_usage:
        description: "Model Usage"
        required: true
        type: string
        default: "text-to-text"

jobs:
  convert:
    runs-on: ubuntu-22.04
    outputs:
      model_suffix: ${{ steps.prepare.outputs.model_suffix }}
      matrix: ${{ steps.prepare.outputs.matrix }}
    steps:
      - name: Maximize Space
        # see https://github.com/easimon/maximize-build-space/blob/master/action.yml.
        run: |
          #!/bin/bash
          
          echo "Purging unnecessary packages"
          sudo apt-get remove -y '^aspnetcore-.*' || true
          sudo apt-get remove -y '^dotnet-.*' --fix-missing || true
          sudo apt-get remove -y '^llvm-.*' --fix-missing || true
          sudo apt-get remove -y 'php.*' --fix-missing || true
          sudo apt-get remove -y '^mongodb-.*' --fix-missing || true
          sudo apt-get remove -y '^mysql-.*' --fix-missing || true
          sudo apt-get remove -y '^postgresql-.*' --fix-missing || true
          sudo apt-get remove -y --fix-missing \
            azure-cli \
            firefox \
            powershell \
            mono-devel \
            libgl1-mesa-dri \
            microsoft-edge-stable \
            google-chrome-stable \
            google-cloud-sdk \
            google-cloud-cli \
            apache2 \
            python3 python3-dev python3-pip python3-venv || true
          df -h /
          
          echo "Purging unnecessary directories"
          sudo rm -rf /usr/local/.ghcup || true
          sudo rm -rf /usr/local/julia* || true
          sudo rm -rf /usr/local/lib/android || true
          sudo rm -rf /usr/local/lib/node_modules || true
          sudo rm -rf /usr/local/share/chromium || true
          sudo rm -rf /usr/local/share/powershell || true
          sudo rm -rf /usr/share/dotnet || true
          sudo rm -rf /usr/share/swift || true
          sudo rm -rf /opt/ghc || true
          sudo rm -rf /opt/pipx || true
          sudo rm -rf /opt/google/chrome || true
          sudo rm -rf /opt/microsoft/msedge || true
          sudo rm -rf /opt/microsoft/powershell || true
          sudo rm -rf "${AGENT_TOOLSDIRECTORY:-/opt/hostedtoolcache/CodeQL}" || true
          df -h /
          
          echo "Purging unnecessary images"
          sudo docker image prune --all --force
          df -h /
      - name: Setup Buildx
        uses: docker/setup-buildx-action@v3
      - name: Login DockerHub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.CI_DOCKERHUB_USERNAME }}
          password: ${{ secrets.CI_DOCKERHUB_PASSWORD }}
      - name: Prepare
        id: prepare
        env:
          HF_TOKEN: ${{ secrets.CI_HUGGINGFACE_TOKEN }}
          CONVERT_TYPE: ${{ github.event.inputs.model_convert_type }}
        run: |
          #!/bin/bash
          
          echo "Get model"
          git lfs install
          git clone --depth 1 https://gpustack:${HF_TOKEN}@huggingface.co/${{ github.event.inputs.huggingface_repository }} ${{ github.workspace }}/model
          rm -rf ${{ github.workspace }}/model/.git
          ls -alth ${{ github.workspace }}/model
          df -h /
          
          echo "Get Dockerfile"
          MODEL_VENDOR="$(echo "${{ github.event.inputs.huggingface_repository }}" | cut -d'/' -f1)"
          MODEL_NAME="$(echo "${{ github.event.inputs.huggingface_repository }}" | cut -d'/' -f2)"
          cat <<EOF > ${{ github.workspace }}/Dockerfile
          # syntax=thxcode/gguf-packer:latest
          FROM       scratch
          LABEL      gguf.model.from="Hugging Face"
          LABEL      gguf.model.usage="${{ github.event.inputs.model_usage }}"
          LABEL      gguf.model.vendor="${MODEL_VENDOR}"
          CONVERT    --from=context --type=${CONVERT_TYPE} /model ${MODEL_NAME}.${CONVERT_TYPE}.gguf
          CMD        ["-m", "${MODEL_NAME}.${CONVERT_TYPE}.gguf", "-c", "8192", "-np", "4"]
          EOF
          
          echo "Get outputs"
          echo "model_suffix=$(echo "${CONVERT_TYPE}" | tr '[:upper:]' '[:lower:]' | sed 's/_/-/g')" >> "$GITHUB_OUTPUT"
          echo "matrix=$(echo "${{ github.event.inputs.model_quantize_types }}" | tr ',' '\n' | jq -R . | jq -s -c .)" >> "$GITHUB_OUTPUT"
      - name: Package
        uses: docker/build-push-action@v6
        with:
          push: true
          context: ${{ github.workspace }}
          tags: |
            "${{ github.event.inputs.model_repository }}/${{ github.event.inputs.model_name }}:${{ github.event.inputs.model_tag }}-${{ steps.prepare.outputs.model_suffix }}"
      - name: Review
        run: |
          #!/bin/bash
          
          echo "Review disk usage"
          df -h /

  quantize:
    needs:
      - convert
    runs-on: ubuntu-22.04
    strategy:
      fail-fast: false
      matrix:
        type: ${{ fromJson(needs.convert.outputs.matrix) }}
    steps:
      - name: Maximize Space
        # see https://github.com/easimon/maximize-build-space/blob/master/action.yml.
        run: |
          #!/bin/bash
          
          echo "Purging unnecessary packages"
          sudo apt-get remove -y '^aspnetcore-.*' || true
          sudo apt-get remove -y '^dotnet-.*' --fix-missing || true
          sudo apt-get remove -y '^llvm-.*' --fix-missing || true
          sudo apt-get remove -y 'php.*' --fix-missing || true
          sudo apt-get remove -y '^mongodb-.*' --fix-missing || true
          sudo apt-get remove -y '^mysql-.*' --fix-missing || true
          sudo apt-get remove -y '^postgresql-.*' --fix-missing || true
          sudo apt-get remove -y --fix-missing \
            azure-cli \
            firefox \
            powershell \
            mono-devel \
            libgl1-mesa-dri \
            microsoft-edge-stable \
            google-chrome-stable \
            google-cloud-sdk \
            google-cloud-cli \
            apache2 \
            python3 python3-dev python3-pip python3-venv || true
          df -h /
          
          echo "Purging unnecessary directories"
          sudo rm -rf /usr/local/.ghcup || true
          sudo rm -rf /usr/local/julia* || true
          sudo rm -rf /usr/local/lib/android || true
          sudo rm -rf /usr/local/lib/node_modules || true
          sudo rm -rf /usr/local/share/chromium || true
          sudo rm -rf /usr/local/share/powershell || true
          sudo rm -rf /usr/share/dotnet || true
          sudo rm -rf /usr/share/swift || true
          sudo rm -rf /opt/ghc || true
          sudo rm -rf /opt/pipx || true
          sudo rm -rf /opt/google/chrome || true
          sudo rm -rf /opt/microsoft/msedge || true
          sudo rm -rf /opt/microsoft/powershell || true
          sudo rm -rf "${AGENT_TOOLSDIRECTORY:-/opt/hostedtoolcache/CodeQL}" || true
          df -h /
          
          echo "Purging unnecessary images"
          sudo docker image prune --all --force
          df -h /
      - name: Setup Buildx
        uses: docker/setup-buildx-action@v3
      - name: Login DockerHub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.CI_DOCKERHUB_USERNAME }}
          password: ${{ secrets.CI_DOCKERHUB_PASSWORD }}
      - name: Prepare
        id: prepare
        env:
          CONVERT_TYPE: ${{ github.event.inputs.model_convert_type }}
          QUANTIZE_TYPE: ${{ matrix.type }}
        run: |
          #!/bin/bash

          echo "Get Dockerfile"
          MODEL_VENDOR="$(echo "${{ github.event.inputs.huggingface_repository }}" | cut -d'/' -f1)"
          MODEL_NAME="$(echo "${{ github.event.inputs.huggingface_repository }}" | cut -d'/' -f2)"
          QUANTIZE_FROM="${{ github.event.inputs.model_repository }}/${{ github.event.inputs.model_name }}:${{ github.event.inputs.model_tag }}-${{ needs.convert.outputs.model_suffix }}"
          cat <<EOF > ${{ github.workspace }}/Dockerfile
          # syntax=thxcode/gguf-packer:latest
          FROM       scratch
          LABEL      gguf.model.from="Hugging Face"
          LABEL      gguf.model.usage="${{ github.event.inputs.model_usage }}"
          LABEL      gguf.model.vendor="${MODEL_VENDOR}"
          QUANTIZE   --from=${QUANTIZE_FROM} --type=${QUANTIZE_TYPE} ${MODEL_NAME}.${CONVERT_TYPE}.gguf ${MODEL_NAME}.${QUANTIZE_TYPE}.gguf
          CMD        ["-m", "${MODEL_NAME}.${QUANTIZE_TYPE}.gguf", "-c", "8192", "-np", "4"]
          EOF

          echo "Get outputs"
          echo "model_suffix=$(echo "${QUANTIZE_TYPE}" | tr '[:upper:]' '[:lower:]' | sed 's/_/-/g')" >> "$GITHUB_OUTPUT"
      - name: Package
        uses: docker/build-push-action@v6
        with:
          push: true
          context: ${{ github.workspace }}
          tags: |
            "${{ github.event.inputs.model_repository }}/${{ github.event.inputs.model_name }}:${{ github.event.inputs.model_tag }}-${{ steps.prepare.outputs.model_suffix }}"
            "${{ matrix.type == 'Q5_K_M' && format('{0}/{1}:{2}', github.event.inputs.model_repository, github.event.inputs.model_name, github.event.inputs.model_tag) || '' }}"
